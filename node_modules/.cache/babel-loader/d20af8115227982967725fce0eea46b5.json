{"remainingRequest":"/home/user/Desktop/API-meteo/dev/node_modules/babel-loader/lib/index.js!/home/user/Desktop/API-meteo/dev/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user/Desktop/API-meteo/dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Desktop/API-meteo/dev/src/components/barre2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Desktop/API-meteo/dev/src/components/barre2.vue","mtime":1554301879896},{"path":"/home/user/Desktop/API-meteo/dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Desktop/API-meteo/dev/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/Desktop/API-meteo/dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Desktop/API-meteo/dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'barre',\n  data: function data() {\n    return {\n      city: \"\" // apiTable: [{\n      //   currentTemp: '',\n      //   minTemp: '',\n      //   maxTemp: '',\n      //   sunrise: '',\n      //   sunset: '',\n      //   pressure: '',\n      //   humidity: '',\n      //   wind: '',\n      //   overcast: '',\n      //   icon: '',\n      // }]\n\n    };\n  },\n  methods: {\n    api: function api(city) {\n      var link = \"https://api.openweathermap.org/data/2.5/forecast?q=\" + city + \"&units=metric&APPID=b5adeb2fa879be2ce6147b10c08e02c5\";\n      this.axios.get(link).then(function (response) {\n        console.log(response.data); // console.log(response.data.weather);\n        // console.log(response.data.main);\n        //   this.currentTemp = response.data.main.temp;\n        //   this.minTemp = response.data.main.temp_min;\n        //   this.maxTemp = response.data.main.temp_max;\n        //   this.pressure = response.data.main.pressure;\n        //   this.humidity = response.data.main.humidity + '%';\n        //   this.wind = response.data.wind.speed + 'm/s';\n        //   this.overcast = response.data.weather[0].description;\n        //   this.icon = \"http://openweathermap.org/img/w/\" + response.data.weather[0].icon + \".png\";\n      });\n    }\n  }\n};",{"version":3,"sources":["barre2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAbA,KAAA;AAeA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AAGA,IAAA,GAHA,eAGA,IAHA,EAGA;AACA,UAAA,IAAA,GAAA,wDAAA,IAAA,GAAA,sDAAA;AAEA,WAAA,KAAA,CACA,GADA,CACA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAdA;AAeA;AArBA;AAnBA,CAAA","sourcesContent":["\n<template>\n<div class=\"cityDiv\">\n\n  <img id=\"logo\" src=\"../assets/logo.svg\" alt=\"\">\n  <br>\n  <input class=\"city1\" type=\"text\" v-model=\"city\" placeholder=\"Search\" @keyup.enter=\"api(city)\">\n<br>\n<br>\n  <!-- <div class=\"container box1\">\n    <div class=\"row\">\n      <div class=\"col-md-2 offset-3\"></div>\n      <div class=\"col-md-2\">\n        <h2>{{city}}</h2>\n      </div>\n      <div class=\"col-md-2\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-2 offset-3\"> <h3>  min Â° {{minTemp}} </h3> </div>\n      <div class=\"col-md-2\">\n          <img :src=\"icon\" alt=\"\" width=\"100px\" height=\"100px\">\n      </div>\n      <div class=\"col-md-2\"> <h3>  {{maxTemp}} </h3></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-2 offset-3\">  </div>\n      <div class=\"col-md-2\">\n      <h4>  {{overcast}} </h4>\n      </div>\n      <div class=\"col-md-2\"> </div>\n    </div>\n  </div>\n<br><br>\n<div class=\"container-fluid\">\n  <div class=\"row box2\">\n    <div class=\"col-md-2 offset-3\"> <h4>  {{wind}} </h4>  </div>\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-2\"> <h4> {{humidity}} </h4></div>\n  </div>\n</div> -->\n\n</div>\n\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'barre',\n  data() {\n    return {\n      city: \"\",\n      // apiTable: [{\n      //   currentTemp: '',\n      //   minTemp: '',\n      //   maxTemp: '',\n      //   sunrise: '',\n      //   sunset: '',\n      //   pressure: '',\n      //   humidity: '',\n      //   wind: '',\n      //   overcast: '',\n      //   icon: '',\n      // }]\n    }\n  },\n  methods: {\n\n\n    api(city) {\n      var link = \"https://api.openweathermap.org/data/2.5/forecast?q=\" + city + \"&units=metric&APPID=b5adeb2fa879be2ce6147b10c08e02c5\";\n\n      this.axios\n      .get(link)\n      .then((response) => {\n        console.log(response.data)\n        // console.log(response.data.weather);\n        // console.log(response.data.main);\n        //   this.currentTemp = response.data.main.temp;\n        //   this.minTemp = response.data.main.temp_min;\n        //   this.maxTemp = response.data.main.temp_max;\n        //   this.pressure = response.data.main.pressure;\n        //   this.humidity = response.data.main.humidity + '%';\n        //   this.wind = response.data.wind.speed + 'm/s';\n        //   this.overcast = response.data.weather[0].description;\n        //   this.icon = \"http://openweathermap.org/img/w/\" + response.data.weather[0].icon + \".png\";\n      })\n    },\n  }\n}\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.box1{\n  width:600px;\nbackground-color: rgba(23, 108, 150, 0.05);\n}\n\n.box2{\n\n}\n\nh1 {\n  color: black;\n}\n\n.cityDiv {\n  top: 0;\n  height: 1000px;\n  width: 100%;\n  background-image: url('../assets/nuage.jpg');\n  background-size: cover\n}\n\n.city1 {\n  margin: 40px;\n}\n\n#logo {\n  margin-top: 60px;\n}\n\n\nbutton {\n  background-image: url('../assets/loupe.svg');\n}\n</style>\n"],"sourceRoot":"src/components"}]}